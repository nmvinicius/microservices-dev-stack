management.tcp.port = 15672

management.load_definitions = /etc/rabbitmq/definitions.json

auth_backends.1 = rabbit_auth_backend_oauth2
auth_oauth2.resource_server_id = rabbitmq
auth_oauth2.preferred_username_claims.1 = preferred_username
auth_oauth2.preferred_username_claims.2 = user_name
auth_oauth2.preferred_username_claims.3 = email

auth_oauth2.issuer = https://auth.localhost/realms/develop
auth_oauth2.jwks_url = https://auth/realms/develop/protocol/openid-connect/certs
auth_oauth2.https.cacertfile = /etc/rabbitmq/certs/wildcard.localhost.crt
auth_oauth2.https.verify = verify_none
auth_oauth2.https.fail_if_no_peer_cert = false

management.oauth_enabled = true
management.oauth_client_id = rabbitmq
management.oauth_client_secret = z103JIn3GEWGFo8Ga5Q6vTac02xJicw8
management.oauth_provider_url = https://auth/realms/develop
management.oauth_scopes = openid profile email

auth_oauth2.additional_scopes_key = realm_access.roles resource_access.account.roles
auth_oauth2.scope_aliases.rabbitmq\.administrator = rabbitmq.tag:administrator rabbitmq.read:*/* rabbitmq.write:*/* rabbitmq.configure:*/*
auth_oauth2.scope_aliases.rabbitmq\.management = rabbitmq.tag:management
auth_oauth2.scope_aliases.rabbitmq\.policymaker = rabbitmq.tag:policymaker
auth_oauth2.scope_aliases.rabbitmq\.monitoring = rabbitmq.tag:monitoring

auth_oauth2.verify_aud = false

management.cors.allow_origins.1 = https://messaging.localhost
management.cors.allow_origins.2 = https://auth.localhost
management.cors.max_age = 1728000
